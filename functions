##
# COMMON FUNCTIONS FILE
#

get () {
  _URL=$1
  _FILENAME=`basename ${_URL}`

  if [ -e "${SRCDIR}/${_FILENAME}" ]; then
    return 0
  else
    cd ${SRCDIR}
    wget -c ${_URL}
    if [ $? != 0 ]; then
      printf 'Could not fetch %s' ${_URL}
      return 1
    fi
    return 0
  fi
}

fetch () { 
  #FIXME - add some kind of age checking
  get ${URL}
}

git_fetch () {
  _URL=$1
  _DIRNAME=$2

  if [ -e ${SRCDIR}/${_DIRNAME}/.git ]
  then
     cd ${SRCDIR}/${_DIRNAME}
     git-pull 
  else
     cd ${SRCDIR}
     git-clone ${_URL}
  fi
}


unpack () {
  # skip it if already extracted
  if [ -d ${SRCDIR}/${DIRNAME} ]
  then
    return 0
  fi

  cd ${SRCDIR}
  if [ ${FILENAME} == ${FILENAME%bz2} ]; then
    tar xvzf ${FILENAME}
    if [ $? != 0 ]; then
      return 1
    fi
  else
    tar xvjf ${FILENAME}
    if [ $? != 0 ]; then
      return 1
    fi
  fi
}

build () {
  cd ${SRCDIR}/${DIRNAME}
  ./configure ${CONFIGOPTIONS}
  make clean
  make
}

install () {
  cd ${SRCDIR}/${DIRNAME}
  for file in ${BINARIES}; do
    cp -vp ${file} ${STAGEDIR}/usr/bin
    if [ $? != 0 ]; then
      echo "Copying a required binary ${file} failed. Please check $0"
      return 1
    fi
  done

  for file in ${SBINARIES}; do
    cp -vp ${file} ${STAGEDIR}/usr/sbin
    if [ $? != 0 ]; then
      echo "Copying a required sbin binary ${file} failed. Please check $0"
      return 1
    fi
  done
}

